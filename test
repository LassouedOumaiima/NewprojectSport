package fr.ca.cats.p1354.s3601.svcllm.service.impl;

import fr.ca.cats.p1354.s3601.svcllm.service.AESUtilService;
import fr.ca.cats.p1354.s3601.svcllm.service.CipherAESGCMService;
import fr.ca.cats.p0070.s1889.logging.service.Logger;
import fr.ca.cats.p0070.s1889.logging.service.LoggerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * Classe de service de cryptage pour l'algorithme AES.
 */
@Service
public class AESUtilServiceImpl implements AESUtilService {

    private static final Logger LOGGER = LoggerService.getLogger(AESUtilServiceImpl.class);

    CipherAESGCMService cipherAESGCMService ;

    @Autowired
    public AESUtilServiceImpl(CipherAESGCMService cipherAESGCMService) {
        this.cipherAESGCMService = cipherAESGCMService;
    }

    /**
     * Initialise un cipher et retourne la chaîne de caractère décryptée par le cipher
     * @param text Chaîne de caractères cryptée
     * @return Chaîne de caractères décryptée
     */
    public String decrypt(String text) {
        try {
            return cipherAESGCMService.decrypt(text);
        } catch (Exception e) {
            LOGGER.error("Error from AESUtil cannot decrypt the text", e);
            return "Decryption failed: " + e.getMessage();
        }
    }

    /**
     * Initialise un cipher et retourne la chaîne de caractère encryptée par le cipher
     * @param text Chaîne de caractères non cryptée
     * @return Chaîne de caractères cryptée
     */
    public String encrypt(String text) {
        try {
            return cipherAESGCMService.encrypt(text);
        } catch (Exception e) {
            LOGGER.error("Error from AESUtil cannot encrypt the text", e);
            return "Encryption failed: " + e.getMessage();
        }
    }
}
