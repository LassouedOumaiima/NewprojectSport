package fr.ca.cats.p1354.s3600.svcdem.service;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.MockitoAnnotations;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.context.SpringBootTest;

import javax.crypto.Cipher;
import javax.crypto.SecretKey;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@SpringBootTest
class CipherAESGCMServiceTest {

    private CipherAESGCMService cipherService;

    @BeforeEach
    public void setUp() throws Exception {
        MockitoAnnotations.openMocks(this);
        cipherService = new CipherAESGCMService();
        // Set the secret key property for the service
        cipherService.secretkey = "your-32-byte-secret-key-string"; // Ensure it's 32 bytes
        cipherService.init();
    }

    @Test
    void testDecrypt() throws Exception {
        // Replace with a valid encrypted string
        String encryptedText = "your_encrypted_base64_string";
        String expectedPlaintext = "expected decrypted text";

        String decryptedText = cipherService.decrypt(encryptedText);

        assertEquals(expectedPlaintext, decryptedText);
    }

    @Test
    void testDecryptWithInvalidInput() {
        String invalidInput = "invalid-base64";

        Exception exception = assertThrows(Exception.class, () -> {
            cipherService.decrypt(invalidInput);
        });

        assertNotNull(exception);
    }
}
