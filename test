	public Prediction getPrediction(@RequestBody String mail, @RequestBody String mail_id) {
		HttpHeaders headers = new HttpHeaders();
		headers.setContentType(MediaType.TEXT_PLAIN);
		HttpEntity<String> entity = new HttpEntity<>(mail,headers);
		Prediction prediction = null;
		try {
			Instant startEvent = Instant.now();
			ResponseEntity<String> response = restTemplate.postForEntity(urlsPrediction, entity, String.class, String.class);
			prediction = objectMapper.readValue(response.getBody(), Prediction.class);
			LOGGER.info("\n*** evt=get prediction request|evt_status=success \n");
			Instant endEvent = Instant.now();
			Duration duration= Duration.between(startEvent, endEvent);
			LOGGER.debug("\n-->Duration getPrediction()= "+ duration.getSeconds()+"sec "+duration.toMillis()+"ms\n");
			LOGGER.info("\n*** Success in retrieving categories from ress-prediction API \n");
		} catch(Exception ex) {
            LOGGER.error("\n*** Error while getting categories from ress-prediction API " +ex.getMessage());
			LOGGER.info("\n*** evt=get prediction request|evt_status=failed|exception=" + ex.getMessage() + "\n");
		}
		return prediction;
	}
